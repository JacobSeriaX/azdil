// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
const firebaseConfig = {
    apiKey: "AIzaSyANM_LEPUPvj0pSqZHbznfcgA-b_lXidcM",
    authDomain: "lolo-c5a60.firebaseapp.com",
    databaseURL: "https://lolo-c5a60-default-rtdb.firebaseio.com",
    projectId: "lolo-c5a60",
    storageBucket: "lolo-c5a60.appspot.com",
    messagingSenderId: "648241395373",
    appId: "1:648241395373:web:46cf51cb87e4a146537824"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
firebase.initializeApp(firebaseConfig);
const database = firebase.database();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Toastr –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
toastr.options = {
    "closeButton": true,
    "progressBar": true,
    "positionClass": "toast-top-right",
    "timeOut": "3000",
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
document.getElementById('newOrderForm').onsubmit = function(event) {
    event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã

    const order = {
        id: Date.now(), // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞
        name: document.getElementById('name').value.trim(),
        phone: document.getElementById('phone').value.trim(),
        size: document.getElementById('size').value.trim(),
        quantity: parseInt(document.getElementById('quantity').value),
        company: document.getElementById('company').value.trim(),
        deposit: parseFloat(document.getElementById('deposit').value), // –ò—Ç–æ–≥ –∑–∞–ª–æ–≥
        note: document.getElementById('note').value.trim(),
        deadline: document.getElementById('deadline').value, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
        status: 'waiting' // –°—Ç–∞—Ç—É—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–æ–∂–∏–¥–∞–Ω–∏–µ"
    };

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!validateOrder(order)) {
        toastr.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.");
        return;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ Firebase
    const newOrderKey = database.ref().child('orders').push().key;
    const updates = {};
    updates['/orders/' + newOrderKey] = order;

    database.ref().update(updates)
        .then(() => {
            toastr.success("–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");
            closeFormModal();
            document.getElementById('newOrderForm').reset(); // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:", error);
            toastr.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.");
        });
};

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–∫–∞–∑–∞
function validateOrder(order) {
    if (!order.name || !order.phone || !order.size || !order.quantity || !order.company || isNaN(order.deposit) || !order.deadline) {
        return false;
    }
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function renderOrders(snapshot) {
    const waitingContainer = document.getElementById('waiting-orders'); // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏
    const completedContainer = document.getElementById('completed-orders'); // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    waitingContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
    completedContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤

    snapshot.forEach(childSnapshot => {
        const order = childSnapshot.val();
        const orderKey = childSnapshot.key;
        const orderDiv = document.createElement('div');
        orderDiv.classList.add('order');
        orderDiv.innerHTML = `
            <div>
                <strong>${order.company}</strong> - ${order.name}
                <div class="order-status ${order.status === 'waiting' ? 'status-waiting' : 'status-completed'}">${order.status === 'waiting' ? '–û–∂–∏–¥–∞–Ω–∏–µ' : '–ì–æ—Ç–æ–≤–æ'}</div>
            </div>
            <div class="buttons">
                ${order.status === 'waiting' ? `<button title="–ì–æ—Ç–æ–≤–æ" onclick="updateOrderStatus('${orderKey}', 'completed')">‚úì</button>` : ''}
                <button title="–£–¥–∞–ª–∏—Ç—å" onclick="deleteOrder('${orderKey}')">üóëÔ∏è</button>
            </div>
        `;

        // –†–∞—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
        const now = new Date();
        const deadlineDate = new Date(order.deadline);
        const daysLeft = Math.ceil((deadlineDate - now) / (1000 * 60 * 60 * 24)); // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π

        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
        if (daysLeft <= 5 && daysLeft > 2) {
            orderDiv.classList.add('blink-yellow'); // –ú–∏–≥–∞–µ—Ç –∂–µ–ª—Ç—ã–º, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω–µ–µ 5 –¥–Ω–µ–π
        } else if (daysLeft <= 2 && daysLeft > 0) {
            orderDiv.classList.add('blink-red'); // –ú–∏–≥–∞–µ—Ç –∫—Ä–∞—Å–Ω—ã–º, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω–µ–µ 2 –¥–Ω–µ–π
        } else if (daysLeft <= 0) {
            orderDiv.classList.add('blink-maroon'); // –ú–∏–≥–∞–µ—Ç —Ç–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–º, –µ—Å–ª–∏ —Å—Ä–æ–∫ –∏—Å—Ç–µ–∫
        }

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
        orderDiv.classList.add('animate__animated', 'animate__fadeIn');

        // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∑–∞–∫–∞–∑
        orderDiv.onclick = function(event) {
            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏
            if (event.target.tagName.toLowerCase() !== 'button') {
                showOrderInfo(order);
            }
        };

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        if (order.status === 'waiting') {
            waitingContainer.appendChild(orderDiv);
        } else if (order.status === 'completed') {
            completedContainer.appendChild(orderDiv);
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function showOrderInfo(order) {
    const modal = document.getElementById('orderInfoModal');
    modal.style.display = 'flex';

    document.getElementById('orderInfoName').innerText = order.name;
    document.getElementById('orderInfoPhone').innerText = order.phone;
    document.getElementById('orderInfoSize').innerText = order.size;
    document.getElementById('orderInfoQuantity').innerText = order.quantity;
    document.getElementById('orderInfoCompany').innerText = order.company;
    document.getElementById('orderInfoDeposit').innerText = order.deposit.toFixed(2) + " ‚ÇΩ"; // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–ª–æ–≥–∞ —Å –¥–≤—É–º—è –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
    document.getElementById('orderInfoNote').innerText = order.note || '–ù–µ—Ç';
    document.getElementById('orderInfoDeadline').innerText = new Date(order.deadline).toLocaleDateString();
    document.getElementById('orderInfoStatus').innerText = order.status === 'waiting' ? '–û–∂–∏–¥–∞–Ω–∏–µ' : '–ì–æ—Ç–æ–≤–æ';
    document.getElementById('orderInfoStatus').className = `order-status ${order.status === 'waiting' ? 'status-waiting' : 'status-completed'}`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ
function closeOrderInfoModal() {
    document.getElementById('orderInfoModal').style.display = 'none';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø–æ –µ–≥–æ –∫–ª—é—á—É –≤ Firebase
function deleteOrder(orderKey) {
    if (confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑?")) {
        database.ref('orders/' + orderKey).remove()
            .then(() => {
                toastr.success("–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.");
            })
            .catch(error => {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:", error);
                toastr.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.");
            });
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
function updateOrderStatus(orderKey, newStatus) {
    database.ref('orders/' + orderKey).update({ status: newStatus })
        .then(() => {
            toastr.success("–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω.");
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞:", error);
            toastr.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞.");
        });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
function closeFormModal() {
    document.getElementById('formModal').style.display = 'none';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
function openOrderForm() {
    document.getElementById('formModal').style.display = 'flex';
}

// –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
database.ref('orders').on('value', (snapshot) => {
    renderOrders(snapshot);
});

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ —Ç–µ–∫—Å—Ç—É –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
function searchOrders() {
    const query = document.getElementById('searchInput').value.toLowerCase(); // –ü–æ–ª—É—á–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    const ordersContainers = document.querySelectorAll('.order');

    ordersContainers.forEach(orderElement => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –∫–∞–∂–¥–æ–º –∑–∞–∫–∞–∑–µ
        if (orderElement.innerText.toLowerCase().includes(query)) {
            orderElement.style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–∫–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –∑–∞–ø—Ä–æ—Å–æ–º
        } else {
            orderElement.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∑–∞–∫–∞–∑—ã
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å—É
function filterOrders() {
    const filter = document.getElementById('filterStatus').value; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä
    const ordersContainers = document.querySelectorAll('.order');

    ordersContainers.forEach(orderElement => {
        const status = orderElement.querySelector('.order-status').innerText.toLowerCase();
        if (filter === 'all') {
            orderElement.style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
        } else if (filter === status) {
            orderElement.style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–∫–∞–∑—ã —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å—Ç–∞—Ç—É—Å–æ–º
        } else {
            orderElement.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∑–∞–∫–∞–∑—ã
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –ø–æ –¥–∞—Ç–µ –¥–µ–¥–ª–∞–π–Ω–∞
function sortOrders() {
    const sort = document.getElementById('sortOrders').value; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
    database.ref('orders').once('value', (snapshot) => {
        let allOrders = [];
        snapshot.forEach(childSnapshot => {
            let order = childSnapshot.val();
            order.key = childSnapshot.key; // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –∑–∞–∫–∞–∑–∞
            allOrders.push(order);
        });

        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∏–ª–∏ —É–±—ã–≤–∞–Ω–∏—é –¥–∞—Ç—ã
        if (sort === 'dateAsc') {
            allOrders.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));
        } else if (sort === 'dateDesc') {
            allOrders.sort((a, b) => new Date(b.deadline) - new Date(a.deadline));
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const updates = {};
        allOrders.forEach((order, index) => {
            updates['/orders/' + order.key + '/sortOrder'] = index;
        });

        database.ref().update(updates)
            .then(() => {
                toastr.success("–ó–∞–∫–∞–∑—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã.");
            })
            .catch(error => {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ –∑–∞–∫–∞–∑–æ–≤:", error);
                toastr.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ –∑–∞–∫–∞–∑–æ–≤.");
            });
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ renderOrders –¥–ª—è —É—á–µ—Ç–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
database.ref('orders').orderByChild('sortOrder').on('value', (snapshot) => {
    renderOrders(snapshot);
});
